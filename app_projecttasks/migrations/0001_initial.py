# Generated by Django 2.0.8 on 2018-09-20 20:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_projects', '0003_auto_20180919_1107'),
        ('app_tasks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectTaskMultiple',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_touched', models.DateTimeField(blank=True, null=True)),
                ('last_touched', models.DateTimeField(auto_now=True)),
                ('count_touched', models.PositiveIntegerField(default=0)),
                ('status', models.BooleanField(default=False)),
                ('task_choice_key', models.IntegerField(default=-1, validators=[django.core.validators.MinValueValidator(0)])),
                ('project', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app_projects.Project')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_tasks.TaskMultiple')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskOpen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_touched', models.DateTimeField(blank=True, null=True)),
                ('last_touched', models.DateTimeField(auto_now=True)),
                ('count_touched', models.PositiveIntegerField(default=0)),
                ('status', models.BooleanField(default=False)),
                ('task_text', models.TextField(blank=True, max_length=250, null=True)),
                ('project', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app_projects.Project')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_tasks.TaskOpen')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskYesOrNo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_touched', models.DateTimeField(blank=True, null=True)),
                ('last_touched', models.DateTimeField(auto_now=True)),
                ('count_touched', models.PositiveIntegerField(default=0)),
                ('status', models.BooleanField(default=False)),
                ('task_value', models.IntegerField(default=-1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(0)])),
                ('task_note', models.TextField(blank=True, max_length=250, null=True)),
                ('project', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app_projects.Project')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_tasks.TaskYesOrNo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='projecttaskyesorno',
            unique_together={('project', 'task')},
        ),
        migrations.AlterUniqueTogether(
            name='projecttaskopen',
            unique_together={('project', 'task')},
        ),
        migrations.AlterUniqueTogether(
            name='projecttaskmultiple',
            unique_together={('project', 'task')},
        ),
    ]
